/*
Shadeform API

Shadeform is a single API and platform for deploying and managing cloud GPUs.

API version: 1.0.0
Contact: support@shadeform.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the InstanceInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceInfoResponse{}

// InstanceInfoResponse struct for InstanceInfoResponse
type InstanceInfoResponse struct {
	// The unique identifier for the instance. Used in the instances for the /instances/{id}/info and /instances/{id}/delete APIs.
	Id    string `json:"id"`
	Cloud Cloud  `json:"cloud"`
	// Specifies the region.
	Region string `json:"region"`
	// The Shadeform standardized instance type. See this [explanation](/getting-started/concepts#shade-instance-type-and-cloud-instance-type) for more details.
	ShadeInstanceType string `json:"shade_instance_type"`
	// The instance type for the underlying cloud provider. See this [explanation](/getting-started/concepts#shade-instance-type-and-cloud-instance-type) for more details.
	CloudInstanceType string `json:"cloud_instance_type"`
	// The unique identifier of the instance issued by the underlying cloud provider.
	CloudAssignedId string `json:"cloud_assigned_id"`
	// Specifies if the instance is launched in [Shade Cloud](/getting-started/concepts#shade-cloud) or in a linked cloud account.
	ShadeCloud bool `json:"shade_cloud"`
	// The name of the instance
	Name          string                `json:"name"`
	Configuration InstanceConfiguration `json:"configuration"`
	// The public IP address of the instance. In select cases, it may also be the DNS.
	Ip string `json:"ip"`
	// The SSH user used to SSH into the instance.
	SshUser string `json:"ssh_user"`
	// The SSH port of the instance. In most cases, this will be port 22 but for some clouds, this may be a different port.
	SshPort int32  `json:"ssh_port"`
	Status  Status `json:"status"`
	// Additional context for the status
	StatusDetails *string `json:"status_details,omitempty"`
	// The cost incurred by the instance. This only the cost via Shadeform. If the instance is deployed in your own cloud account, then all billing is through your cloud provider.
	CostEstimate string `json:"cost_estimate"`
	// The hourly price of the instance in cents.
	HourlyPrice *int32 `json:"hourly_price,omitempty"`
	// List of volume IDs to be mounted. Currently only supports 1 volume at a time.
	VolumeIds []string `json:"volume_ids,omitempty"`
	// The ID of the SSH Key.
	SshKeyId            *string              `json:"ssh_key_id,omitempty"`
	LaunchConfiguration *LaunchConfiguration `json:"launch_configuration,omitempty"`
	AutoDelete          *AutoDelete          `json:"auto_delete,omitempty"`
	Alert               *Alert               `json:"alert,omitempty"`
	VolumeMount         *VolumeMount         `json:"volume_mount,omitempty"`
	// Add custom, searchable tags to instances.
	Tags []string `json:"tags,omitempty"`
	// List of environment variable name and values to automatically add to the instance
	Envs []Env `json:"envs,omitempty"`
	// List of port mappings on an instance that a Cloud Provider might have automatically set up.
	PortMappings []InstancePortMappings `json:"port_mappings,omitempty"`
	// The timestamp of when the instance was active in UTC.
	ActiveAt *time.Time `json:"active_at,omitempty"`
	// The timestamp of when the instance was created in UTC.
	CreatedAt time.Time `json:"created_at"`
	// The timestamp of when the instance was deleted in UTC.
	DeletedAt            time.Time `json:"deleted_at"`
	BootTime             *BootTime `json:"boot_time,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InstanceInfoResponse InstanceInfoResponse

// NewInstanceInfoResponse instantiates a new InstanceInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceInfoResponse(id string, cloud Cloud, region string, shadeInstanceType string, cloudInstanceType string, cloudAssignedId string, shadeCloud bool, name string, configuration InstanceConfiguration, ip string, sshUser string, sshPort int32, status Status, costEstimate string, createdAt time.Time, deletedAt time.Time) *InstanceInfoResponse {
	this := InstanceInfoResponse{}
	this.Id = id
	this.Cloud = cloud
	this.Region = region
	this.ShadeInstanceType = shadeInstanceType
	this.CloudInstanceType = cloudInstanceType
	this.CloudAssignedId = cloudAssignedId
	this.ShadeCloud = shadeCloud
	this.Name = name
	this.Configuration = configuration
	this.Ip = ip
	this.SshUser = sshUser
	this.SshPort = sshPort
	this.Status = status
	this.CostEstimate = costEstimate
	this.CreatedAt = createdAt
	this.DeletedAt = deletedAt
	return &this
}

// NewInstanceInfoResponseWithDefaults instantiates a new InstanceInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceInfoResponseWithDefaults() *InstanceInfoResponse {
	this := InstanceInfoResponse{}
	return &this
}

// GetId returns the Id field value
func (o *InstanceInfoResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InstanceInfoResponse) SetId(v string) {
	o.Id = v
}

// GetCloud returns the Cloud field value
func (o *InstanceInfoResponse) GetCloud() Cloud {
	if o == nil {
		var ret Cloud
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetCloudOk() (*Cloud, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *InstanceInfoResponse) SetCloud(v Cloud) {
	o.Cloud = v
}

// GetRegion returns the Region field value
func (o *InstanceInfoResponse) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *InstanceInfoResponse) SetRegion(v string) {
	o.Region = v
}

// GetShadeInstanceType returns the ShadeInstanceType field value
func (o *InstanceInfoResponse) GetShadeInstanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShadeInstanceType
}

// GetShadeInstanceTypeOk returns a tuple with the ShadeInstanceType field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetShadeInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShadeInstanceType, true
}

// SetShadeInstanceType sets field value
func (o *InstanceInfoResponse) SetShadeInstanceType(v string) {
	o.ShadeInstanceType = v
}

// GetCloudInstanceType returns the CloudInstanceType field value
func (o *InstanceInfoResponse) GetCloudInstanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudInstanceType
}

// GetCloudInstanceTypeOk returns a tuple with the CloudInstanceType field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetCloudInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudInstanceType, true
}

// SetCloudInstanceType sets field value
func (o *InstanceInfoResponse) SetCloudInstanceType(v string) {
	o.CloudInstanceType = v
}

// GetCloudAssignedId returns the CloudAssignedId field value
func (o *InstanceInfoResponse) GetCloudAssignedId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudAssignedId
}

// GetCloudAssignedIdOk returns a tuple with the CloudAssignedId field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetCloudAssignedIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudAssignedId, true
}

// SetCloudAssignedId sets field value
func (o *InstanceInfoResponse) SetCloudAssignedId(v string) {
	o.CloudAssignedId = v
}

// GetShadeCloud returns the ShadeCloud field value
func (o *InstanceInfoResponse) GetShadeCloud() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShadeCloud
}

// GetShadeCloudOk returns a tuple with the ShadeCloud field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetShadeCloudOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShadeCloud, true
}

// SetShadeCloud sets field value
func (o *InstanceInfoResponse) SetShadeCloud(v bool) {
	o.ShadeCloud = v
}

// GetName returns the Name field value
func (o *InstanceInfoResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InstanceInfoResponse) SetName(v string) {
	o.Name = v
}

// GetConfiguration returns the Configuration field value
func (o *InstanceInfoResponse) GetConfiguration() InstanceConfiguration {
	if o == nil {
		var ret InstanceConfiguration
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetConfigurationOk() (*InstanceConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// SetConfiguration sets field value
func (o *InstanceInfoResponse) SetConfiguration(v InstanceConfiguration) {
	o.Configuration = v
}

// GetIp returns the Ip field value
func (o *InstanceInfoResponse) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *InstanceInfoResponse) SetIp(v string) {
	o.Ip = v
}

// GetSshUser returns the SshUser field value
func (o *InstanceInfoResponse) GetSshUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetSshUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshUser, true
}

// SetSshUser sets field value
func (o *InstanceInfoResponse) SetSshUser(v string) {
	o.SshUser = v
}

// GetSshPort returns the SshPort field value
func (o *InstanceInfoResponse) GetSshPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SshPort
}

// GetSshPortOk returns a tuple with the SshPort field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetSshPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshPort, true
}

// SetSshPort sets field value
func (o *InstanceInfoResponse) SetSshPort(v int32) {
	o.SshPort = v
}

// GetStatus returns the Status field value
func (o *InstanceInfoResponse) GetStatus() Status {
	if o == nil {
		var ret Status
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetStatusOk() (*Status, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InstanceInfoResponse) SetStatus(v Status) {
	o.Status = v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetStatusDetails() string {
	if o == nil || IsNil(o.StatusDetails) {
		var ret string
		return ret
	}
	return *o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetStatusDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDetails) {
		return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasStatusDetails() bool {
	if o != nil && !IsNil(o.StatusDetails) {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given string and assigns it to the StatusDetails field.
func (o *InstanceInfoResponse) SetStatusDetails(v string) {
	o.StatusDetails = &v
}

// GetCostEstimate returns the CostEstimate field value
func (o *InstanceInfoResponse) GetCostEstimate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CostEstimate
}

// GetCostEstimateOk returns a tuple with the CostEstimate field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetCostEstimateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CostEstimate, true
}

// SetCostEstimate sets field value
func (o *InstanceInfoResponse) SetCostEstimate(v string) {
	o.CostEstimate = v
}

// GetHourlyPrice returns the HourlyPrice field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetHourlyPrice() int32 {
	if o == nil || IsNil(o.HourlyPrice) {
		var ret int32
		return ret
	}
	return *o.HourlyPrice
}

// GetHourlyPriceOk returns a tuple with the HourlyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetHourlyPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.HourlyPrice) {
		return nil, false
	}
	return o.HourlyPrice, true
}

// HasHourlyPrice returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasHourlyPrice() bool {
	if o != nil && !IsNil(o.HourlyPrice) {
		return true
	}

	return false
}

// SetHourlyPrice gets a reference to the given int32 and assigns it to the HourlyPrice field.
func (o *InstanceInfoResponse) SetHourlyPrice(v int32) {
	o.HourlyPrice = &v
}

// GetVolumeIds returns the VolumeIds field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetVolumeIds() []string {
	if o == nil || IsNil(o.VolumeIds) {
		var ret []string
		return ret
	}
	return o.VolumeIds
}

// GetVolumeIdsOk returns a tuple with the VolumeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetVolumeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.VolumeIds) {
		return nil, false
	}
	return o.VolumeIds, true
}

// HasVolumeIds returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasVolumeIds() bool {
	if o != nil && !IsNil(o.VolumeIds) {
		return true
	}

	return false
}

// SetVolumeIds gets a reference to the given []string and assigns it to the VolumeIds field.
func (o *InstanceInfoResponse) SetVolumeIds(v []string) {
	o.VolumeIds = v
}

// GetSshKeyId returns the SshKeyId field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetSshKeyId() string {
	if o == nil || IsNil(o.SshKeyId) {
		var ret string
		return ret
	}
	return *o.SshKeyId
}

// GetSshKeyIdOk returns a tuple with the SshKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetSshKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.SshKeyId) {
		return nil, false
	}
	return o.SshKeyId, true
}

// HasSshKeyId returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasSshKeyId() bool {
	if o != nil && !IsNil(o.SshKeyId) {
		return true
	}

	return false
}

// SetSshKeyId gets a reference to the given string and assigns it to the SshKeyId field.
func (o *InstanceInfoResponse) SetSshKeyId(v string) {
	o.SshKeyId = &v
}

// GetLaunchConfiguration returns the LaunchConfiguration field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetLaunchConfiguration() LaunchConfiguration {
	if o == nil || IsNil(o.LaunchConfiguration) {
		var ret LaunchConfiguration
		return ret
	}
	return *o.LaunchConfiguration
}

// GetLaunchConfigurationOk returns a tuple with the LaunchConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetLaunchConfigurationOk() (*LaunchConfiguration, bool) {
	if o == nil || IsNil(o.LaunchConfiguration) {
		return nil, false
	}
	return o.LaunchConfiguration, true
}

// HasLaunchConfiguration returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasLaunchConfiguration() bool {
	if o != nil && !IsNil(o.LaunchConfiguration) {
		return true
	}

	return false
}

// SetLaunchConfiguration gets a reference to the given LaunchConfiguration and assigns it to the LaunchConfiguration field.
func (o *InstanceInfoResponse) SetLaunchConfiguration(v LaunchConfiguration) {
	o.LaunchConfiguration = &v
}

// GetAutoDelete returns the AutoDelete field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetAutoDelete() AutoDelete {
	if o == nil || IsNil(o.AutoDelete) {
		var ret AutoDelete
		return ret
	}
	return *o.AutoDelete
}

// GetAutoDeleteOk returns a tuple with the AutoDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetAutoDeleteOk() (*AutoDelete, bool) {
	if o == nil || IsNil(o.AutoDelete) {
		return nil, false
	}
	return o.AutoDelete, true
}

// HasAutoDelete returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasAutoDelete() bool {
	if o != nil && !IsNil(o.AutoDelete) {
		return true
	}

	return false
}

// SetAutoDelete gets a reference to the given AutoDelete and assigns it to the AutoDelete field.
func (o *InstanceInfoResponse) SetAutoDelete(v AutoDelete) {
	o.AutoDelete = &v
}

// GetAlert returns the Alert field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetAlert() Alert {
	if o == nil || IsNil(o.Alert) {
		var ret Alert
		return ret
	}
	return *o.Alert
}

// GetAlertOk returns a tuple with the Alert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetAlertOk() (*Alert, bool) {
	if o == nil || IsNil(o.Alert) {
		return nil, false
	}
	return o.Alert, true
}

// HasAlert returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasAlert() bool {
	if o != nil && !IsNil(o.Alert) {
		return true
	}

	return false
}

// SetAlert gets a reference to the given Alert and assigns it to the Alert field.
func (o *InstanceInfoResponse) SetAlert(v Alert) {
	o.Alert = &v
}

// GetVolumeMount returns the VolumeMount field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetVolumeMount() VolumeMount {
	if o == nil || IsNil(o.VolumeMount) {
		var ret VolumeMount
		return ret
	}
	return *o.VolumeMount
}

// GetVolumeMountOk returns a tuple with the VolumeMount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetVolumeMountOk() (*VolumeMount, bool) {
	if o == nil || IsNil(o.VolumeMount) {
		return nil, false
	}
	return o.VolumeMount, true
}

// HasVolumeMount returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasVolumeMount() bool {
	if o != nil && !IsNil(o.VolumeMount) {
		return true
	}

	return false
}

// SetVolumeMount gets a reference to the given VolumeMount and assigns it to the VolumeMount field.
func (o *InstanceInfoResponse) SetVolumeMount(v VolumeMount) {
	o.VolumeMount = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *InstanceInfoResponse) SetTags(v []string) {
	o.Tags = v
}

// GetEnvs returns the Envs field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetEnvs() []Env {
	if o == nil || IsNil(o.Envs) {
		var ret []Env
		return ret
	}
	return o.Envs
}

// GetEnvsOk returns a tuple with the Envs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetEnvsOk() ([]Env, bool) {
	if o == nil || IsNil(o.Envs) {
		return nil, false
	}
	return o.Envs, true
}

// HasEnvs returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasEnvs() bool {
	if o != nil && !IsNil(o.Envs) {
		return true
	}

	return false
}

// SetEnvs gets a reference to the given []Env and assigns it to the Envs field.
func (o *InstanceInfoResponse) SetEnvs(v []Env) {
	o.Envs = v
}

// GetPortMappings returns the PortMappings field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetPortMappings() []InstancePortMappings {
	if o == nil || IsNil(o.PortMappings) {
		var ret []InstancePortMappings
		return ret
	}
	return o.PortMappings
}

// GetPortMappingsOk returns a tuple with the PortMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetPortMappingsOk() ([]InstancePortMappings, bool) {
	if o == nil || IsNil(o.PortMappings) {
		return nil, false
	}
	return o.PortMappings, true
}

// HasPortMappings returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasPortMappings() bool {
	if o != nil && !IsNil(o.PortMappings) {
		return true
	}

	return false
}

// SetPortMappings gets a reference to the given []InstancePortMappings and assigns it to the PortMappings field.
func (o *InstanceInfoResponse) SetPortMappings(v []InstancePortMappings) {
	o.PortMappings = v
}

// GetActiveAt returns the ActiveAt field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetActiveAt() time.Time {
	if o == nil || IsNil(o.ActiveAt) {
		var ret time.Time
		return ret
	}
	return *o.ActiveAt
}

// GetActiveAtOk returns a tuple with the ActiveAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetActiveAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ActiveAt) {
		return nil, false
	}
	return o.ActiveAt, true
}

// HasActiveAt returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasActiveAt() bool {
	if o != nil && !IsNil(o.ActiveAt) {
		return true
	}

	return false
}

// SetActiveAt gets a reference to the given time.Time and assigns it to the ActiveAt field.
func (o *InstanceInfoResponse) SetActiveAt(v time.Time) {
	o.ActiveAt = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *InstanceInfoResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *InstanceInfoResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDeletedAt returns the DeletedAt field value
func (o *InstanceInfoResponse) GetDeletedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedAt, true
}

// SetDeletedAt sets field value
func (o *InstanceInfoResponse) SetDeletedAt(v time.Time) {
	o.DeletedAt = v
}

// GetBootTime returns the BootTime field value if set, zero value otherwise.
func (o *InstanceInfoResponse) GetBootTime() BootTime {
	if o == nil || IsNil(o.BootTime) {
		var ret BootTime
		return ret
	}
	return *o.BootTime
}

// GetBootTimeOk returns a tuple with the BootTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceInfoResponse) GetBootTimeOk() (*BootTime, bool) {
	if o == nil || IsNil(o.BootTime) {
		return nil, false
	}
	return o.BootTime, true
}

// HasBootTime returns a boolean if a field has been set.
func (o *InstanceInfoResponse) HasBootTime() bool {
	if o != nil && !IsNil(o.BootTime) {
		return true
	}

	return false
}

// SetBootTime gets a reference to the given BootTime and assigns it to the BootTime field.
func (o *InstanceInfoResponse) SetBootTime(v BootTime) {
	o.BootTime = &v
}

func (o InstanceInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["cloud"] = o.Cloud
	toSerialize["region"] = o.Region
	toSerialize["shade_instance_type"] = o.ShadeInstanceType
	toSerialize["cloud_instance_type"] = o.CloudInstanceType
	toSerialize["cloud_assigned_id"] = o.CloudAssignedId
	toSerialize["shade_cloud"] = o.ShadeCloud
	toSerialize["name"] = o.Name
	toSerialize["configuration"] = o.Configuration
	toSerialize["ip"] = o.Ip
	toSerialize["ssh_user"] = o.SshUser
	toSerialize["ssh_port"] = o.SshPort
	toSerialize["status"] = o.Status
	if !IsNil(o.StatusDetails) {
		toSerialize["status_details"] = o.StatusDetails
	}
	toSerialize["cost_estimate"] = o.CostEstimate
	if !IsNil(o.HourlyPrice) {
		toSerialize["hourly_price"] = o.HourlyPrice
	}
	if !IsNil(o.VolumeIds) {
		toSerialize["volume_ids"] = o.VolumeIds
	}
	if !IsNil(o.SshKeyId) {
		toSerialize["ssh_key_id"] = o.SshKeyId
	}
	if !IsNil(o.LaunchConfiguration) {
		toSerialize["launch_configuration"] = o.LaunchConfiguration
	}
	if !IsNil(o.AutoDelete) {
		toSerialize["auto_delete"] = o.AutoDelete
	}
	if !IsNil(o.Alert) {
		toSerialize["alert"] = o.Alert
	}
	if !IsNil(o.VolumeMount) {
		toSerialize["volume_mount"] = o.VolumeMount
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Envs) {
		toSerialize["envs"] = o.Envs
	}
	if !IsNil(o.PortMappings) {
		toSerialize["port_mappings"] = o.PortMappings
	}
	if !IsNil(o.ActiveAt) {
		toSerialize["active_at"] = o.ActiveAt
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["deleted_at"] = o.DeletedAt
	if !IsNil(o.BootTime) {
		toSerialize["boot_time"] = o.BootTime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InstanceInfoResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"cloud",
		"region",
		"shade_instance_type",
		"cloud_instance_type",
		"cloud_assigned_id",
		"shade_cloud",
		"name",
		"configuration",
		"ip",
		"ssh_user",
		"ssh_port",
		"status",
		"cost_estimate",
		"created_at",
		"deleted_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInstanceInfoResponse := _InstanceInfoResponse{}

	err = json.Unmarshal(data, &varInstanceInfoResponse)

	if err != nil {
		return err
	}

	*o = InstanceInfoResponse(varInstanceInfoResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "cloud")
		delete(additionalProperties, "region")
		delete(additionalProperties, "shade_instance_type")
		delete(additionalProperties, "cloud_instance_type")
		delete(additionalProperties, "cloud_assigned_id")
		delete(additionalProperties, "shade_cloud")
		delete(additionalProperties, "name")
		delete(additionalProperties, "configuration")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "ssh_user")
		delete(additionalProperties, "ssh_port")
		delete(additionalProperties, "status")
		delete(additionalProperties, "status_details")
		delete(additionalProperties, "cost_estimate")
		delete(additionalProperties, "hourly_price")
		delete(additionalProperties, "volume_ids")
		delete(additionalProperties, "ssh_key_id")
		delete(additionalProperties, "launch_configuration")
		delete(additionalProperties, "auto_delete")
		delete(additionalProperties, "alert")
		delete(additionalProperties, "volume_mount")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "envs")
		delete(additionalProperties, "port_mappings")
		delete(additionalProperties, "active_at")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "boot_time")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInstanceInfoResponse struct {
	value *InstanceInfoResponse
	isSet bool
}

func (v NullableInstanceInfoResponse) Get() *InstanceInfoResponse {
	return v.value
}

func (v *NullableInstanceInfoResponse) Set(val *InstanceInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceInfoResponse(val *InstanceInfoResponse) *NullableInstanceInfoResponse {
	return &NullableInstanceInfoResponse{value: val, isSet: true}
}

func (v NullableInstanceInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
