/*
Shadeform API

Shadeform is a single API and platform for deploying and managing cloud GPUs.

API version: 1.0.0
Contact: support@shadeform.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeMount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeMount{}

// VolumeMount Settings for mounting volumes onto file systems
type VolumeMount struct {
	// Set to true to automatically mount unmounted disks to a default filesystem.
	Auto                 *bool `json:"auto,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VolumeMount VolumeMount

// NewVolumeMount instantiates a new VolumeMount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeMount() *VolumeMount {
	this := VolumeMount{}
	return &this
}

// NewVolumeMountWithDefaults instantiates a new VolumeMount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeMountWithDefaults() *VolumeMount {
	this := VolumeMount{}
	return &this
}

// GetAuto returns the Auto field value if set, zero value otherwise.
func (o *VolumeMount) GetAuto() bool {
	if o == nil || IsNil(o.Auto) {
		var ret bool
		return ret
	}
	return *o.Auto
}

// GetAutoOk returns a tuple with the Auto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMount) GetAutoOk() (*bool, bool) {
	if o == nil || IsNil(o.Auto) {
		return nil, false
	}
	return o.Auto, true
}

// HasAuto returns a boolean if a field has been set.
func (o *VolumeMount) HasAuto() bool {
	if o != nil && !IsNil(o.Auto) {
		return true
	}

	return false
}

// SetAuto gets a reference to the given bool and assigns it to the Auto field.
func (o *VolumeMount) SetAuto(v bool) {
	o.Auto = &v
}

func (o VolumeMount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeMount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Auto) {
		toSerialize["auto"] = o.Auto
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VolumeMount) UnmarshalJSON(data []byte) (err error) {
	varVolumeMount := _VolumeMount{}

	err = json.Unmarshal(data, &varVolumeMount)

	if err != nil {
		return err
	}

	*o = VolumeMount(varVolumeMount)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auto")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVolumeMount struct {
	value *VolumeMount
	isSet bool
}

func (v NullableVolumeMount) Get() *VolumeMount {
	return v.value
}

func (v *NullableVolumeMount) Set(val *VolumeMount) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeMount) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeMount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeMount(val *VolumeMount) *NullableVolumeMount {
	return &NullableVolumeMount{value: val, isSet: true}
}

func (v NullableVolumeMount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeMount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
