/*
Shadeform API

Shadeform is a single API and platform for deploying and managing cloud GPUs.

API version: 1.0.0
Contact: support@shadeform.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRequest{}

// CreateRequest struct for CreateRequest
type CreateRequest struct {
	Cloud Cloud `json:"cloud"`
	// Specifies the region.
	Region string `json:"region"`
	// The Shadeform standardized instance type. See this [explanation](/getting-started/concepts#shade-instance-type-and-cloud-instance-type) for more details.
	ShadeInstanceType string `json:"shade_instance_type"`
	// Specifies if the instance is launched in [Shade Cloud](/getting-started/concepts#shade-cloud) or in a linked cloud account.
	ShadeCloud bool `json:"shade_cloud"`
	// The name of the instance
	Name string `json:"name"`
	// The operating system of the instance.
	Os *string `json:"os,omitempty"`
	// The ID of the template to use for this instance
	TemplateId          *string              `json:"template_id,omitempty"`
	LaunchConfiguration *LaunchConfiguration `json:"launch_configuration,omitempty"`
	// List of volume IDs to be mounted. Currently only supports 1 volume at a time.
	VolumeIds []string `json:"volume_ids,omitempty"`
	// The ID of the SSH Key.
	SshKeyId    *string      `json:"ssh_key_id,omitempty"`
	AutoDelete  *AutoDelete  `json:"auto_delete,omitempty"`
	Alert       *Alert       `json:"alert,omitempty"`
	VolumeMount *VolumeMount `json:"volume_mount,omitempty"`
	// Add custom, searchable tags to instances.
	Tags []string `json:"tags,omitempty"`
	// List of environment variable name and values to automatically add to the instance
	Envs                 []Env `json:"envs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateRequest CreateRequest

// NewCreateRequest instantiates a new CreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRequest(cloud Cloud, region string, shadeInstanceType string, shadeCloud bool, name string) *CreateRequest {
	this := CreateRequest{}
	this.Cloud = cloud
	this.Region = region
	this.ShadeInstanceType = shadeInstanceType
	this.ShadeCloud = shadeCloud
	this.Name = name
	return &this
}

// NewCreateRequestWithDefaults instantiates a new CreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRequestWithDefaults() *CreateRequest {
	this := CreateRequest{}
	return &this
}

// GetCloud returns the Cloud field value
func (o *CreateRequest) GetCloud() Cloud {
	if o == nil {
		var ret Cloud
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetCloudOk() (*Cloud, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *CreateRequest) SetCloud(v Cloud) {
	o.Cloud = v
}

// GetRegion returns the Region field value
func (o *CreateRequest) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *CreateRequest) SetRegion(v string) {
	o.Region = v
}

// GetShadeInstanceType returns the ShadeInstanceType field value
func (o *CreateRequest) GetShadeInstanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShadeInstanceType
}

// GetShadeInstanceTypeOk returns a tuple with the ShadeInstanceType field value
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetShadeInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShadeInstanceType, true
}

// SetShadeInstanceType sets field value
func (o *CreateRequest) SetShadeInstanceType(v string) {
	o.ShadeInstanceType = v
}

// GetShadeCloud returns the ShadeCloud field value
func (o *CreateRequest) GetShadeCloud() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShadeCloud
}

// GetShadeCloudOk returns a tuple with the ShadeCloud field value
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetShadeCloudOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShadeCloud, true
}

// SetShadeCloud sets field value
func (o *CreateRequest) SetShadeCloud(v bool) {
	o.ShadeCloud = v
}

// GetName returns the Name field value
func (o *CreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateRequest) SetName(v string) {
	o.Name = v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *CreateRequest) GetOs() string {
	if o == nil || IsNil(o.Os) {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetOsOk() (*string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *CreateRequest) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *CreateRequest) SetOs(v string) {
	o.Os = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *CreateRequest) GetTemplateId() string {
	if o == nil || IsNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *CreateRequest) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *CreateRequest) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetLaunchConfiguration returns the LaunchConfiguration field value if set, zero value otherwise.
func (o *CreateRequest) GetLaunchConfiguration() LaunchConfiguration {
	if o == nil || IsNil(o.LaunchConfiguration) {
		var ret LaunchConfiguration
		return ret
	}
	return *o.LaunchConfiguration
}

// GetLaunchConfigurationOk returns a tuple with the LaunchConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetLaunchConfigurationOk() (*LaunchConfiguration, bool) {
	if o == nil || IsNil(o.LaunchConfiguration) {
		return nil, false
	}
	return o.LaunchConfiguration, true
}

// HasLaunchConfiguration returns a boolean if a field has been set.
func (o *CreateRequest) HasLaunchConfiguration() bool {
	if o != nil && !IsNil(o.LaunchConfiguration) {
		return true
	}

	return false
}

// SetLaunchConfiguration gets a reference to the given LaunchConfiguration and assigns it to the LaunchConfiguration field.
func (o *CreateRequest) SetLaunchConfiguration(v LaunchConfiguration) {
	o.LaunchConfiguration = &v
}

// GetVolumeIds returns the VolumeIds field value if set, zero value otherwise.
func (o *CreateRequest) GetVolumeIds() []string {
	if o == nil || IsNil(o.VolumeIds) {
		var ret []string
		return ret
	}
	return o.VolumeIds
}

// GetVolumeIdsOk returns a tuple with the VolumeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetVolumeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.VolumeIds) {
		return nil, false
	}
	return o.VolumeIds, true
}

// HasVolumeIds returns a boolean if a field has been set.
func (o *CreateRequest) HasVolumeIds() bool {
	if o != nil && !IsNil(o.VolumeIds) {
		return true
	}

	return false
}

// SetVolumeIds gets a reference to the given []string and assigns it to the VolumeIds field.
func (o *CreateRequest) SetVolumeIds(v []string) {
	o.VolumeIds = v
}

// GetSshKeyId returns the SshKeyId field value if set, zero value otherwise.
func (o *CreateRequest) GetSshKeyId() string {
	if o == nil || IsNil(o.SshKeyId) {
		var ret string
		return ret
	}
	return *o.SshKeyId
}

// GetSshKeyIdOk returns a tuple with the SshKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetSshKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.SshKeyId) {
		return nil, false
	}
	return o.SshKeyId, true
}

// HasSshKeyId returns a boolean if a field has been set.
func (o *CreateRequest) HasSshKeyId() bool {
	if o != nil && !IsNil(o.SshKeyId) {
		return true
	}

	return false
}

// SetSshKeyId gets a reference to the given string and assigns it to the SshKeyId field.
func (o *CreateRequest) SetSshKeyId(v string) {
	o.SshKeyId = &v
}

// GetAutoDelete returns the AutoDelete field value if set, zero value otherwise.
func (o *CreateRequest) GetAutoDelete() AutoDelete {
	if o == nil || IsNil(o.AutoDelete) {
		var ret AutoDelete
		return ret
	}
	return *o.AutoDelete
}

// GetAutoDeleteOk returns a tuple with the AutoDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetAutoDeleteOk() (*AutoDelete, bool) {
	if o == nil || IsNil(o.AutoDelete) {
		return nil, false
	}
	return o.AutoDelete, true
}

// HasAutoDelete returns a boolean if a field has been set.
func (o *CreateRequest) HasAutoDelete() bool {
	if o != nil && !IsNil(o.AutoDelete) {
		return true
	}

	return false
}

// SetAutoDelete gets a reference to the given AutoDelete and assigns it to the AutoDelete field.
func (o *CreateRequest) SetAutoDelete(v AutoDelete) {
	o.AutoDelete = &v
}

// GetAlert returns the Alert field value if set, zero value otherwise.
func (o *CreateRequest) GetAlert() Alert {
	if o == nil || IsNil(o.Alert) {
		var ret Alert
		return ret
	}
	return *o.Alert
}

// GetAlertOk returns a tuple with the Alert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetAlertOk() (*Alert, bool) {
	if o == nil || IsNil(o.Alert) {
		return nil, false
	}
	return o.Alert, true
}

// HasAlert returns a boolean if a field has been set.
func (o *CreateRequest) HasAlert() bool {
	if o != nil && !IsNil(o.Alert) {
		return true
	}

	return false
}

// SetAlert gets a reference to the given Alert and assigns it to the Alert field.
func (o *CreateRequest) SetAlert(v Alert) {
	o.Alert = &v
}

// GetVolumeMount returns the VolumeMount field value if set, zero value otherwise.
func (o *CreateRequest) GetVolumeMount() VolumeMount {
	if o == nil || IsNil(o.VolumeMount) {
		var ret VolumeMount
		return ret
	}
	return *o.VolumeMount
}

// GetVolumeMountOk returns a tuple with the VolumeMount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetVolumeMountOk() (*VolumeMount, bool) {
	if o == nil || IsNil(o.VolumeMount) {
		return nil, false
	}
	return o.VolumeMount, true
}

// HasVolumeMount returns a boolean if a field has been set.
func (o *CreateRequest) HasVolumeMount() bool {
	if o != nil && !IsNil(o.VolumeMount) {
		return true
	}

	return false
}

// SetVolumeMount gets a reference to the given VolumeMount and assigns it to the VolumeMount field.
func (o *CreateRequest) SetVolumeMount(v VolumeMount) {
	o.VolumeMount = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetEnvs returns the Envs field value if set, zero value otherwise.
func (o *CreateRequest) GetEnvs() []Env {
	if o == nil || IsNil(o.Envs) {
		var ret []Env
		return ret
	}
	return o.Envs
}

// GetEnvsOk returns a tuple with the Envs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequest) GetEnvsOk() ([]Env, bool) {
	if o == nil || IsNil(o.Envs) {
		return nil, false
	}
	return o.Envs, true
}

// HasEnvs returns a boolean if a field has been set.
func (o *CreateRequest) HasEnvs() bool {
	if o != nil && !IsNil(o.Envs) {
		return true
	}

	return false
}

// SetEnvs gets a reference to the given []Env and assigns it to the Envs field.
func (o *CreateRequest) SetEnvs(v []Env) {
	o.Envs = v
}

func (o CreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloud"] = o.Cloud
	toSerialize["region"] = o.Region
	toSerialize["shade_instance_type"] = o.ShadeInstanceType
	toSerialize["shade_cloud"] = o.ShadeCloud
	toSerialize["name"] = o.Name
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	if !IsNil(o.LaunchConfiguration) {
		toSerialize["launch_configuration"] = o.LaunchConfiguration
	}
	if !IsNil(o.VolumeIds) {
		toSerialize["volume_ids"] = o.VolumeIds
	}
	if !IsNil(o.SshKeyId) {
		toSerialize["ssh_key_id"] = o.SshKeyId
	}
	if !IsNil(o.AutoDelete) {
		toSerialize["auto_delete"] = o.AutoDelete
	}
	if !IsNil(o.Alert) {
		toSerialize["alert"] = o.Alert
	}
	if !IsNil(o.VolumeMount) {
		toSerialize["volume_mount"] = o.VolumeMount
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Envs) {
		toSerialize["envs"] = o.Envs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloud",
		"region",
		"shade_instance_type",
		"shade_cloud",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRequest := _CreateRequest{}

	err = json.Unmarshal(data, &varCreateRequest)

	if err != nil {
		return err
	}

	*o = CreateRequest(varCreateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloud")
		delete(additionalProperties, "region")
		delete(additionalProperties, "shade_instance_type")
		delete(additionalProperties, "shade_cloud")
		delete(additionalProperties, "name")
		delete(additionalProperties, "os")
		delete(additionalProperties, "template_id")
		delete(additionalProperties, "launch_configuration")
		delete(additionalProperties, "volume_ids")
		delete(additionalProperties, "ssh_key_id")
		delete(additionalProperties, "auto_delete")
		delete(additionalProperties, "alert")
		delete(additionalProperties, "volume_mount")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "envs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateRequest struct {
	value *CreateRequest
	isSet bool
}

func (v NullableCreateRequest) Get() *CreateRequest {
	return v.value
}

func (v *NullableCreateRequest) Set(val *CreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRequest(val *CreateRequest) *NullableCreateRequest {
	return &NullableCreateRequest{value: val, isSet: true}
}

func (v NullableCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
