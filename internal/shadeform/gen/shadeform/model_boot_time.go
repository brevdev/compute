/*
Shadeform API

Shadeform is a single API and platform for deploying and managing cloud GPUs.

API version: 1.0.0
Contact: support@shadeform.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BootTime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BootTime{}

// BootTime struct for BootTime
type BootTime struct {
	// boot time minimum estimate
	MinBootInSec *int32 `json:"min_boot_in_sec,omitempty"`
	// boot time maximum estimate
	MaxBootInSec         *int32 `json:"max_boot_in_sec,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BootTime BootTime

// NewBootTime instantiates a new BootTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBootTime() *BootTime {
	this := BootTime{}
	return &this
}

// NewBootTimeWithDefaults instantiates a new BootTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBootTimeWithDefaults() *BootTime {
	this := BootTime{}
	return &this
}

// GetMinBootInSec returns the MinBootInSec field value if set, zero value otherwise.
func (o *BootTime) GetMinBootInSec() int32 {
	if o == nil || IsNil(o.MinBootInSec) {
		var ret int32
		return ret
	}
	return *o.MinBootInSec
}

// GetMinBootInSecOk returns a tuple with the MinBootInSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BootTime) GetMinBootInSecOk() (*int32, bool) {
	if o == nil || IsNil(o.MinBootInSec) {
		return nil, false
	}
	return o.MinBootInSec, true
}

// HasMinBootInSec returns a boolean if a field has been set.
func (o *BootTime) HasMinBootInSec() bool {
	if o != nil && !IsNil(o.MinBootInSec) {
		return true
	}

	return false
}

// SetMinBootInSec gets a reference to the given int32 and assigns it to the MinBootInSec field.
func (o *BootTime) SetMinBootInSec(v int32) {
	o.MinBootInSec = &v
}

// GetMaxBootInSec returns the MaxBootInSec field value if set, zero value otherwise.
func (o *BootTime) GetMaxBootInSec() int32 {
	if o == nil || IsNil(o.MaxBootInSec) {
		var ret int32
		return ret
	}
	return *o.MaxBootInSec
}

// GetMaxBootInSecOk returns a tuple with the MaxBootInSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BootTime) GetMaxBootInSecOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxBootInSec) {
		return nil, false
	}
	return o.MaxBootInSec, true
}

// HasMaxBootInSec returns a boolean if a field has been set.
func (o *BootTime) HasMaxBootInSec() bool {
	if o != nil && !IsNil(o.MaxBootInSec) {
		return true
	}

	return false
}

// SetMaxBootInSec gets a reference to the given int32 and assigns it to the MaxBootInSec field.
func (o *BootTime) SetMaxBootInSec(v int32) {
	o.MaxBootInSec = &v
}

func (o BootTime) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BootTime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinBootInSec) {
		toSerialize["min_boot_in_sec"] = o.MinBootInSec
	}
	if !IsNil(o.MaxBootInSec) {
		toSerialize["max_boot_in_sec"] = o.MaxBootInSec
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BootTime) UnmarshalJSON(data []byte) (err error) {
	varBootTime := _BootTime{}

	err = json.Unmarshal(data, &varBootTime)

	if err != nil {
		return err
	}

	*o = BootTime(varBootTime)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "min_boot_in_sec")
		delete(additionalProperties, "max_boot_in_sec")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBootTime struct {
	value *BootTime
	isSet bool
}

func (v NullableBootTime) Get() *BootTime {
	return v.value
}

func (v *NullableBootTime) Set(val *BootTime) {
	v.value = val
	v.isSet = true
}

func (v NullableBootTime) IsSet() bool {
	return v.isSet
}

func (v *NullableBootTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBootTime(val *BootTime) *NullableBootTime {
	return &NullableBootTime{value: val, isSet: true}
}

func (v NullableBootTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBootTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
